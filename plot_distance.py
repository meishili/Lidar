import matplotlib.pyplot as plt
import matplotlib as mpl
import numpy as np
from matplotlib.ticker import MultipleLocator, AutoLocator, FixedLocator

data_1000 = np.loadtxt('1000_zy.txt')
data_2000 = np.loadtxt('2000_zy.txt')
data_3000 = np.loadtxt('3000_zy.txt')
data_1000 = np.array(data_1000)
data_2000 = np.array(data_2000)
data_3000 = np.array(data_3000)

xray = data_1000[:,0]

line_width = 5
ps = 30
bar_width = 0.25

fig = plt.figure(figsize=(30,12))
plt.suptitle('Lidar measurements in Dunhuang', size = 40)
# plt.subplot(211)
# plt.bar(xray - bar_width, data_1000[:,1], width= bar_width, label = '<1km', align='center')
# plt.bar(xray, data_2000[:,1], width= bar_width, label = '1-2km', align='center')
# plt.bar(xray + bar_width, data_3000[:,1], width= bar_width, label = '2-3km', align='center')
# ax=plt.gca()
# ax.spines['bottom'].set_linewidth(line_width)
# ax.spines['left'].set_linewidth(line_width)
# ax.spines['right'].set_linewidth(line_width)
# ax.spines['top'].set_linewidth(line_width)
# plt.xlim([-0.5, 19.5])
# plt.ylim(0, 50)
# plt.yticks((0, 10, 20, 30, 40, 50), size = ps)
# x_title = ('0.01', '0.02', '0.03', '0.04', '0.05', '0.06', '0.07', '0.08', '0.09', '0.1', '0.11', '0.12', '0.13', '0.14', '0.15', '0.16', '0.17', '0.18', '0.19', '0.2')
# plt.xticks(xray, x_title, size = ps)
# plt.tick_params(axis='both', which = 'major', width = 5, length = 10, labelbottom = True)
# plt.ylabel('Frequency (%)', size = ps)
# plt.xlabel('Extinction coefficient (/km)', size = ps)
# plt.legend(fontsize = ps)

plt.subplot(211)
plt.bar(xray - bar_width, data_1000[:,2], width= bar_width, label = '<1km', align='center')
plt.bar(xray, data_2000[:,2], width= bar_width, label = '1-2km', align='center')
plt.bar(xray + bar_width, data_3000[:,2], width= bar_width, label = '2-3km', align='center')
ax=plt.gca()
ax.spines['bottom'].set_linewidth(line_width)
ax.spines['left'].set_linewidth(line_width)
ax.spines['right'].set_linewidth(line_width)
ax.spines['top'].set_linewidth(line_width)
plt.xlim([-0.5, 19.5])
plt.ylim(0, 25)
plt.yticks((0, 5, 10, 15, 20, 25), size = ps)
x_title = ('0.075', '0.15', '0.225', '0.3', '0.375', '0.45', '0.525', '0.6', '0.675', '0.75', '0.825', '0.9', '0.975', '1.05', '1.125', '1.2', '1.275', '1.35', '1.425', '1.5')
plt.xticks(xray, x_title, size = ps)
plt.tick_params(axis='both', which = 'major', width = 5, length = 10, labelbottom = True)
plt.ylabel('Frequency (%)', size = ps)
plt.xlabel('Effective radius (\u03BCm)', size = ps)
plt.legend(fontsize = ps)

plt.subplot(212)
plt.bar(xray - bar_width, data_1000[:,3], width= bar_width, label = '<1km', align='center')
plt.bar(xray, data_2000[:,3], width= bar_width, label = '1-2km', align='center')
plt.bar(xray + bar_width, data_3000[:,3], width= bar_width, label = '2-3km', align='center')
ax=plt.gca()
ax.spines['bottom'].set_linewidth(line_width)
ax.spines['left'].set_linewidth(line_width)
ax.spines['right'].set_linewidth(line_width)
ax.spines['top'].set_linewidth(line_width)
plt.xlim([-0.5, 19.5])
plt.ylim(0, 20)
plt.yticks((0, 5, 10, 15, 20), size = ps)
x_title = ('0.03', '0.06', '0.09', '0.12', '0.15', '0.18', '0.21', '0.24', '0.27', '0.3', '0.33', '0.36', '0.39', '0.42', '0.45', '0.48', '0.51', '0.54', '0.57', '0.6')
plt.xticks(xray, x_title, size = ps)
plt.tick_params(axis='both', which = 'major', width = 5, length = 10, labelbottom = True)
plt.ylabel('Frequency (%)', size = ps)
plt.xlabel('Volume concentration ($\u03BCm^3$/$\u03BCm^2$)', size = ps)
plt.legend(fontsize = ps)

# plt.subplot(212)
# plt.bar(xray - bar_width, data_1000[:,4], width= bar_width, label = '<1km', align='center')
# plt.bar(xray, data_2000[:,4], width= bar_width, label = '1-2km', align='center')
# plt.bar(xray + bar_width, data_3000[:,4], width= bar_width, label = '2-3km', align='center')
# ax=plt.gca()
# ax.spines['bottom'].set_linewidth(line_width)
# ax.spines['left'].set_linewidth(line_width)
# ax.spines['right'].set_linewidth(line_width)
# ax.spines['top'].set_linewidth(line_width)
# plt.xlim([-0.5, 19.5])
# plt.ylim(0, 30)
# plt.yticks((0, 5, 10, 15, 20, 25, 30), size = ps)
# x_title = ('0.02', '0.04', '0.06', '0.08', '0.10', '0.12', '0.14', '0.16', '0.18', '0.2', '0.22', '0.24', '0.26', '0.28', '0.30', '0.32', '0.34', '0.36', '0.38', '0.4')
# plt.xticks(xray, x_title, size = ps)
# # plt.xticks(rotation = 45)
# plt.tick_params(axis='both', which = 'major', width = 5, length = 10, labelbottom = True)
# plt.ylabel('Frequency (%)', size = ps)
# plt.xlabel('Particle depolarization ratio', size = ps)
# plt.legend(fontsize = ps)

plt.subplots_adjust( hspace = 0.3)
plt.subplots_adjust(left=0.05,bottom=0.1,right=0.99,top=0.93)
plt.savefig("dh_distance_mir.png")